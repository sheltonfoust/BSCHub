// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialWorkApp.DataAccess;

#nullable disable

namespace SocialWorkApp.DataAccess.Migrations
{
    [DbContext(typeof(SocialWorkDbContext))]
    partial class SocialWorkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SocialWorkApp.Domain.Clients.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly>("ISP_YearStartDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsSevere")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("NeedsBCIP")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedsPPMP")
                        .HasColumnType("boolean");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("ClientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Clients.ISP_Year", b =>
                {
                    b.Property<int>("ISP_YearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ISP_YearId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("MeetingDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ISP_YearId");

                    b.HasIndex("ClientId");

                    b.ToTable("ISP_Years", (string)null);
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Reports.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReportId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ReviewedDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("ReportId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Users.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers", (string)null);
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Clients.Client", b =>
                {
                    b.HasOne("SocialWorkApp.Domain.Users.Provider", "Provider")
                        .WithMany("Clients")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Clients.ISP_Year", b =>
                {
                    b.HasOne("SocialWorkApp.Domain.Clients.Client", "Client")
                        .WithMany("ISP_Years")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Reports.Report", b =>
                {
                    b.HasOne("SocialWorkApp.Domain.Clients.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Clients.Client", b =>
                {
                    b.Navigation("ISP_Years");
                });

            modelBuilder.Entity("SocialWorkApp.Domain.Users.Provider", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
